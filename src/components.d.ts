/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MyTaskModel } from "./utils/models/myTaskModel";
export namespace Components {
    interface DaysScale {
    }
    interface MyCalendar {
        "inputTasks": MyTaskModel[];
    }
    interface MyDay {
        "currentDate": Date;
        "listTasks": MyTaskModel[];
    }
    interface MyGrid {
        "listTasks": MyTaskModel[];
        "startDate": Date;
    }
    interface MyTask {
        "inputTask": MyTaskModel;
        "top": number;
    }
    interface TimeScale {
    }
}
declare global {
    interface HTMLDaysScaleElement extends Components.DaysScale, HTMLStencilElement {
    }
    var HTMLDaysScaleElement: {
        prototype: HTMLDaysScaleElement;
        new (): HTMLDaysScaleElement;
    };
    interface HTMLMyCalendarElement extends Components.MyCalendar, HTMLStencilElement {
    }
    var HTMLMyCalendarElement: {
        prototype: HTMLMyCalendarElement;
        new (): HTMLMyCalendarElement;
    };
    interface HTMLMyDayElement extends Components.MyDay, HTMLStencilElement {
    }
    var HTMLMyDayElement: {
        prototype: HTMLMyDayElement;
        new (): HTMLMyDayElement;
    };
    interface HTMLMyGridElement extends Components.MyGrid, HTMLStencilElement {
    }
    var HTMLMyGridElement: {
        prototype: HTMLMyGridElement;
        new (): HTMLMyGridElement;
    };
    interface HTMLMyTaskElement extends Components.MyTask, HTMLStencilElement {
    }
    var HTMLMyTaskElement: {
        prototype: HTMLMyTaskElement;
        new (): HTMLMyTaskElement;
    };
    interface HTMLTimeScaleElement extends Components.TimeScale, HTMLStencilElement {
    }
    var HTMLTimeScaleElement: {
        prototype: HTMLTimeScaleElement;
        new (): HTMLTimeScaleElement;
    };
    interface HTMLElementTagNameMap {
        "days-scale": HTMLDaysScaleElement;
        "my-calendar": HTMLMyCalendarElement;
        "my-day": HTMLMyDayElement;
        "my-grid": HTMLMyGridElement;
        "my-task": HTMLMyTaskElement;
        "time-scale": HTMLTimeScaleElement;
    }
}
declare namespace LocalJSX {
    interface DaysScale {
        "onRequestChangeDates"?: (event: CustomEvent<void>) => void;
    }
    interface MyCalendar {
        "inputTasks"?: MyTaskModel[];
    }
    interface MyDay {
        "currentDate"?: Date;
        "listTasks"?: MyTaskModel[];
        "onRequestAddTask"?: (event: CustomEvent<Date>) => void;
        "onRequestEditTask"?: (event: CustomEvent<string>) => void;
    }
    interface MyGrid {
        "listTasks"?: MyTaskModel[];
        "startDate"?: Date;
    }
    interface MyTask {
        "inputTask"?: MyTaskModel;
        "onClickedBody"?: (event: CustomEvent<string>) => void;
        "onClickedTitle"?: (event: CustomEvent<string>) => void;
        "top"?: number;
    }
    interface TimeScale {
    }
    interface IntrinsicElements {
        "days-scale": DaysScale;
        "my-calendar": MyCalendar;
        "my-day": MyDay;
        "my-grid": MyGrid;
        "my-task": MyTask;
        "time-scale": TimeScale;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "days-scale": LocalJSX.DaysScale & JSXBase.HTMLAttributes<HTMLDaysScaleElement>;
            "my-calendar": LocalJSX.MyCalendar & JSXBase.HTMLAttributes<HTMLMyCalendarElement>;
            "my-day": LocalJSX.MyDay & JSXBase.HTMLAttributes<HTMLMyDayElement>;
            "my-grid": LocalJSX.MyGrid & JSXBase.HTMLAttributes<HTMLMyGridElement>;
            "my-task": LocalJSX.MyTask & JSXBase.HTMLAttributes<HTMLMyTaskElement>;
            "time-scale": LocalJSX.TimeScale & JSXBase.HTMLAttributes<HTMLTimeScaleElement>;
        }
    }
}
